names(vBetaTS)[23]
names(vBetaTS)[23:length(vBetaTS)]
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(sum(b[23:length(b)]== 0))
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
sum(vBetaTS[23:length(vBetaTS)])
constraints <- list(sum(b[23:length(b)]) == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
sum(vBetaTS[23:length(vBetaTS)])
vBetaTS
length(indep)
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] =
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
sum(vBetaTS[23:55])
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
in_data <- read.csv("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Probability of Default/ALL LOANS Buckets.csv", stringsAsFactors=FALSE)
in_data$DATE <- as.Date(as.yearqtr(in_data$QTR, format = "%Y-Q%q"))
data <- in_data %>% filter(CREDIT_BUCKET != 'No Score', !grepl('2010', QTR, fixed = TRUE), !grepl('2011', QTR, fixed = TRUE))
data$CREDIT_BUCKET <- ifelse(data$CREDIT_BUCKET %in% c("820-839", ">840"), ">820", ifelse(data$CREDIT_BUCKET %in% c("<600", "600-619", "620-639"), "<640", data$CREDIT_BUCKET))
data <- data %>% group_by(QTR, DATE, CREDIT_BUCKET, NEW_LOAN) %>%
summarise(
CURR_LOANS = sum(CURR_LOANS),
BAD_LOANS = sum(BAD_LOANS),
total_volume = sum(total_volume)
) %>%
ungroup()
data$PD <- data$BAD_LOANS / data$CURR_LOANS
write.csv(data, "E:/Network/MFM_Classes/5031/Copulas/Project/Code/Probability of Default/use_data.csv")
c_bs <- unique(data$CREDIT_BUCKET)
for( c in 1:length(c_bs)){
data[paste("A_", c_bs[c], "_0", sep = "")] <- 0
data[paste("A_", c_bs[c], "_1", sep = "")] <- 0
data[(data$CREDIT_BUCKET == c_bs[c] & data$NEW_LOAN == 0), paste("A_", c_bs[c], "_0", sep = "")] <- 1
data[(data$CREDIT_BUCKET == c_bs[c] & data$NEW_LOAN == 1), paste("A_", c_bs[c], "_1", sep = "")] <- 1
}
write.csv(data, "E:/Network/MFM_Classes/5031/Copulas/Project/Code/Probability of Default/use_data.csv")
write.csv(data, "E:/Network/MFM_Classes/5031/Copulas/Project/Code/Probability of Default/use_data.csv")
c_bs <- unique(data$CREDIT_BUCKET)
for( c in 1:length(c_bs)){
data[paste("A_", c_bs[c], "_0", sep = "")] <- 0
data[paste("A_", c_bs[c], "_1", sep = "")] <- 0
data[(data$CREDIT_BUCKET == c_bs[c] & data$NEW_LOAN == 0), paste("A_", c_bs[c], "_0", sep = "")] <- 1
data[(data$CREDIT_BUCKET == c_bs[c] & data$NEW_LOAN == 1), paste("A_", c_bs[c], "_1", sep = "")] <- 1
}
dts <- unique(data$QTR)
for(d in 1:length(dts)){
data[paste("B_", dts[d], sep = "")] <- 0
data[data$QTR == dts[d],paste("B_", dts[d], sep = "")] <- 1
}
indep <- data[,!(names(data) %in% c("y","DATE", "PD", "PD1", "QTR","CREDIT_BUCKET","NEW_LOAN","CURR_LOANS","BAD_LOANS","total_volume","PD"))]
alphs <- indep[,!grepl("B_", names(indep))]
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qnorm)
mX <- data.matrix(indep)
mZ <- data.matrix(alphs)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
for(row in 1:nrow(data)){
data[row, "resid"] <- data[row,  "y"] - mX[row,] %*% vBetaTS
}
data <- data %>% group_by(CREDIT_BUCKET, NEW_LOAN) %>%
mutate(var = sum(resid * resid) / (n() - 2))
vY2 <- data.matrix(data["y"] )
mX2 <- data.matrix(indep )
b <- Variable(length(indep))
obj <- Minimize(sum(((vY2 - mX2 %*% b) / sqrt(data$var))^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBeta2 = soln$getValue(b)
names(vBeta2) <- names(indep)
out_data <- merge(data.frame(CREDIT_BUCKET = c_bs), data.frame(NEW_LOAN = c(0,1)), all = TRUE)
out_data$norm_rho <- mean(vBeta2[grepl("B_",names(vBeta2))] * vBeta2[grepl("B_",names(vBeta2))] ) / (1 + mean(vBeta2[grepl("B_",names(vBeta2))] * vBeta2[grepl("B_",names(vBeta2))]))
out_data$norm_PD <- 0
for(row in 1:nrow(out_data)){
out_data[row,"norm_PD"] <- pnorm(vBeta2[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"norm_rho"]))
}
data$Estimated <- pnorm((mX2 %*% vBeta2))
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default")
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/normal/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
View(out_data)
?Minimize
?qt
indep <- data[,!(names(data) %in% c("y","DATE", "PD", "PD1", "QTR","CREDIT_BUCKET","NEW_LOAN","CURR_LOANS","BAD_LOANS","total_volume","PD"))]
alphs <- indep[,!grepl("B_", names(indep))]
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = 5)
mX <- data.matrix(indep)
mZ <- data.matrix(alphs)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
out_data <- merge(data.frame(CREDIT_BUCKET = c_bs), data.frame(NEW_LOAN = c(0,1)), all = TRUE)
out_data$student_rho <- mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))] ) / (1 + mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))]))
out_data$student_PD <- 0
for(row in 1:nrow(out_data)){
out_data[row,"student_PD"] <- pt(df = t, vBetaTS[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"norm_rho"]))
}
data$Estimated <- pt((mX2 %*% vBetaTS), df = 5)
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default")
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/student/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = 5)
data["y"]
mX <- data.matrix(indep)
mZ <- data.matrix(alphs)
vY <- data.matrix(data["y"])
vY
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
out_data <- merge(data.frame(CREDIT_BUCKET = c_bs), data.frame(NEW_LOAN = c(0,1)), all = TRUE)
out_data$student_rho <- mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))] ) / (1 + mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))]))
out_data$student_PD <- 0
for(row in 1:nrow(out_data)){
out_data[row,"student_PD"] <- pt(df = t, vBetaTS[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"norm_rho"]))
}
for(row in 1:nrow(out_data)){
out_data[row,"student_PD"] <- pt(df = 5, vBetaTS[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"norm_rho"]))
}
data$Estimated <- pt((mX2 %*% vBetaTS), df = 5)
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default")
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/student/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
indep <- data[,!(names(data) %in% c("y","DATE", "PD", "PD1", "QTR","CREDIT_BUCKET","NEW_LOAN","CURR_LOANS","BAD_LOANS","total_volume","PD"))]
alphs <- indep[,!grepl("B_", names(indep))]
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = 5)
mX <- data.matrix(indep)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
out_data <- merge(data.frame(CREDIT_BUCKET = c_bs), data.frame(NEW_LOAN = c(0,1)), all = TRUE)
out_data$student_rho <- mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))] ) / (1 + mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))]))
out_data$student_PD <- 0
for(row in 1:nrow(out_data)){
out_data[row,"student_PD"] <- pt(df = 5, vBetaTS[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"norm_rho"]))
}
data$Estimated <- pt((mX2 %*% vBetaTS), df = 5)
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default")
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/student/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
soln
View(out_data)
for(row in 1:nrow(out_data)){
out_data[row,"student_PD"] <- pt(df = 5, vBetaTS[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"student_rho"]))
}
sum(vBetaTS[23:55])
vBetaTS
length(indep)
indep
indep <- data[,!(names(data) %in% c("y","DATE", "PD", "PD1", "QTR","CREDIT_BUCKET","NEW_LOAN","CURR_LOANS","BAD_LOANS","total_volume","PD", "resid", "var", "Estimated"))]
alphs <- indep[,!grepl("B_", names(indep))]
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = 5)
mX <- data.matrix(indep)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
vBetaTS = soln$getValue(b)
names(vBetaTS) <- names(indep)
sum(vBetaTS[23:55])
out_data <- merge(data.frame(CREDIT_BUCKET = c_bs), data.frame(NEW_LOAN = c(0,1)), all = TRUE)
out_data$student_rho <- mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))] ) / (1 + mean(vBetaTS[grepl("B_",names(vBetaTS))] * vBetaTS[grepl("B_",names(vBetaTS))]))
out_data$student_PD <- 0
for(row in 1:nrow(out_data)){
out_data[row,"student_PD"] <- pt(df = 5, vBetaTS[paste("A_",out_data[row,"CREDIT_BUCKET"],"_", out_data[row,"NEW_LOAN"], sep = "")] * sqrt(1 - out_data[row,"student_rho"]))
}
data$Estimated <- pt((mX2 %*% vBetaTS), df = 5)
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default")
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/student/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
sum(vBetaTS[23:55])
vBetaTS
soln$value
for(i in 1:100)
{
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = 10)
mX <- data.matrix(indep)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
if(i == 1)
{
low <- soln$value
df <- i
}
else if(low > soln$value)
{
low <- soln$value
df <- i
}
}
df
for(i in 1:100){
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = 10)
mX <- data.matrix(indep)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
print(low)
if(i == 1)
{
low <- soln$value
df <- i
}
else if(low > soln$value)
{
low <- soln$value
df <- i
}
}
for(i in 1:100){
data["PD1"] <- data["PD"]
data[data["PD"] == 0, "PD1"] <- 0.000000000001
data["y"] <- lapply(data["PD1"], qt, df = i)
mX <- data.matrix(indep)
vY <- data.matrix(data["y"])
b <- Variable(length(indep))
obj <- Minimize(sum((vY - mX %*% b)^2))
constraints <- list(
b[23] + b[24] + b[25] + b[26] + b[27] + b[28] +
b[29] + b[30] + b[31] + b[32] + b[33] + b[34]+
b[35] + b[36] + b[37] + b[38] + b[39] + b[40] +
b[41] + b[42] + b[43] + b[44] + b[45] + b[46] +
b[47] + b[48] + b[49] + b[50] + b[51] + b[52] +
b[53] + b[54] + b[55] == 0)
problem <- Problem(obj, constraints)
soln <- solve(problem)
print(low)
if(i == 1)
{
low <- soln$value
df <- i
}
else if(low > soln$value)
{
low <- soln$value
df <- i
}
}
df
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default") +
scale_y_continuous(labels = scales::percent_format(accuracy = 3))
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/normal/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default") +
scale_y_continuous(labels = scales::percent_format(accuracy = 5))
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/normal/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
for( c in 1:(length(c_bs) - 1)){
tmp <- data %>% filter(CREDIT_BUCKET == c_bs[c]) %>%
select(DATE, NEW_LOAN, PD, Estimated) %>%
rename(Actual = PD)
tmp$Loan_Age <- ifelse(tmp$NEW_LOAN == 1, "New Loan", "Old Loan")
ggplot(tmp) +
facet_grid(rows = vars(Loan_Age)) +
geom_line(aes(x = DATE, y = Estimated, color = "red")) +
geom_point(aes(x = DATE, y = Actual, color = "blue")) +
ggtitle(paste("Credit Bucket Model Comparison - ", c_bs[c], sep = "")) +
xlab("Date") +
ylab("Probability of Default") +
scale_y_continuous(labels = scales::percent)
ggsave(paste("E:/Network/MFM_Classes/5031/Copulas/Project/Code/Model Results/Plots/R Comparison/normal/", str_replace(str_replace(c_bs[c], "<", "lt_"), ">","gt_"), "_normal.png", sep = "" ), dpi = 600)
}
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
risk_factor <- vBetaTS[grepl("B_",names(vBetaTS))] / sqrt(mean(vBetaTS[grepl("B_",names(vBetaTS))]))
mean(vBetaTS[grepl("B_",names(vBetaTS))])
risk_factor <- vBetaTS[grepl("B_",names(vBetaTS))] / sqrt(mean(vBetaTS[grepl("B_",names(vBetaTS))]))
risk_factor <- vBetaTS[grepl("B_",names(vBetaTS))] / sqrt(mean(vBetaTS[grepl("B_",names(vBetaTS))] ^ 2))
risk_factor
names(risk_factor) <- substr(names(risk_factor), 3)
names(risk_factor) <- substr(names(risk_factor), 3, nchar(names(risk_factor)))
risk_factor
ggplot + geom_line(aes(x = names(risk_factor), y = risk_factor))
ggplot() + geom_line(aes(x = names(risk_factor), y = risk_factor))
ggplot(aes(x = names(risk_factor), y = risk_factor)) + geom_line()
risk_plot <- data.frame(risk_factor)
risk_plot
risk_plot <- data.frame(date = names(risk_factor)), risk_factor = risk_factor)
risk_plot <- data.frame(list)(date = names(risk_factor)), risk_factor = risk_factor)
risk_plot <- data.frame(list(date = names(risk_factor)), risk_factor = risk_factor))
risk_plot <- data.frame(list(date = names(risk_factor), risk_factor = risk_factor))
risk_plot
ggplot(risk_plot, aes(x = date, y = risk_factor)) + geom_line()
ggplot(risk_plot, aes(x = date, y = risk_factor, color = "black")) +
geom_line()
as.Date(date)
ggplot(risk_plot, aes(x = as.Date(date, format = "%Y-Q%q"), y = risk_factor, color = "black")) +
geom_line()
as.Date(date, format = "%Y-Q%q")
as.Date(names(risk_factor), format = "%Y-Q%q")
names(risk_factor)
as.yearqtr(names(risk_factor), format = "%Y-Q%q")
risk_plot <- data.frame(list(date = as.yearqtr(names(risk_factor), format = "%Y-Q%q"), risk_factor = risk_factor))
ggplot(risk_plot, aes(x = , y = risk_factor, color = "black")) +
geom_line()
ggplot(risk_plot, aes(x = date, y = risk_factor, color = "black")) +
geom_line()
ggplot(risk_plot, aes(x = date, y = risk_factor)) +
geom_title("Risk Factor Over Time") +
xlab("Date") +
ylab("Value") +
geom_line()
ggplot(risk_plot, aes(x = date, y = risk_factor)) +
ggtitle("Risk Factor Over Time") +
xlab("Date") +
ylab("Value") +
geom_line()
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
names(vBetaTS)
vBetaTS[23]
vBetaTS[55]
?Problem
source('E:/Network/MFM_Classes/5031/Copulas/Project/Code/Functions/R-DataFitting.R')
acf(risk_factor)
